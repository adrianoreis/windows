apply plugin: 'java'
apply plugin: "jacoco"

version = '1.0.0'

description = """windows extreme programming"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

configurations {
    acceptanceTestCompile.extendsFrom testCompile
    acceptanceTestRuntime.extendsFrom testRuntime
}

sourceSets {
    acceptanceTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output

    }
}
task acceptanceTest(type: Test){
    testClassesDir = sourceSets.acceptanceTest.output.classesDir
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

//check.dependsOn acceptanceTest
acceptanceTest.mustRunAfter test

repositories {
     mavenCentral()
}

dependencies {
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}
